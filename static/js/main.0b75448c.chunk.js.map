{"version":3,"sources":["components/SearchPanel/SearchPanel.js","components/TodoListItem/TodoListItem.js","components/TodoList/TodoList.js","components/AppHeader/AppHeader.js","components/ItemFilter/ItemFilter.js","components/FormAddItem/FormAddItem.js","components/App/App.js","index.js"],"names":["SearchPanel","state","textSearch","changeText","e","_this","setState","target","value","props","setTextSearch","react_default","a","createElement","className","type","placeholder","onChange","this","Component","TodoListItem","classNames","done","important","onClick","onDone","label","onImportant","onDeleted","TodoList","_ref","todoData","arrItems","map","item","key","id","components_TodoListItem_TodoListItem","Object","assign","AppHeader","toDo","ItemFilter","buttons","name","_this2","clazz","filter","onFilterChange","FormAddItem","onSubmit","preventDefault","onAdd","App","max","text","newToDo","_ref2","concat","toConsumableArray","_ref3","toogleProperty","_ref4","term","search","items","length","toLowerCase","indexOf","console","log","arr","propName","idx","findIndex","oldData","newData","objectSpread","defineProperty","slice","countDone","needForWork","visibleText","components_AppHeader_AppHeader","SearchPanel_SearchPanel_SearchPanel","ItemFilter_ItemFilter_ItemFilter","components_TodoList_TodoList","FormAddItem_FormAddItem_FormAddItem","ReactDOM","render","App_App_App","document","getElementById"],"mappings":"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","file":"static/js/main.0b75448c.chunk.js","sourcesContent":["import React, {Component} from 'react'\r\nimport './SearchPanel.css'\r\n\r\nexport default class SearchPanel extends Component {\r\n    \r\n    state = {\r\n        textSearch: ''\r\n    }\r\n\r\n    changeText = (e) => {\r\n        \r\n        this.setState({\r\n            textSearch: e.target.value\r\n        })\r\n        this.props.setTextSearch(this.state.textSearch);\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <form className='FormAddItem d-flex'>\r\n                <input type='text' className='SearchPanel form-control' placeholder='search' onChange={this.changeText} value = {this.state.textSearch}  />\r\n            </form>\r\n        )\r\n    }\r\n}\r\n\r\n\r\n","import React from 'react'\r\nimport './TodoListItem.css'\r\n\r\nconst TodoListItem = (props) => {\r\n\r\n    let classNames ='TodoListItem';\r\n        if (props.done)  classNames += ' done' \r\n        if (props.important)  classNames += ' important' \r\n\r\n    return (\r\n        \r\n        <div className={classNames}>\r\n            \r\n            <span className='TodoListItem-label' onClick={props.onDone}>\r\n                {props.label}\r\n            </span>\r\n\r\n            <div>\r\n                <button type='button' className='btn btn-outline-success btn-sm' onClick={props.onImportant}>\r\n                    <i className='fa fa-exclamation'></i>\r\n                </button>\r\n                <button type='button' className='btn btn-outline-danger btn-sm' onClick={props.onDeleted}>\r\n                    <i className='fa fa-trash-o'></i>\r\n                </button>\r\n            </div>\r\n        </div>\r\n    )\r\n    \r\n    /*onLabelClick = () => {\r\n        this.setState((state) => {\r\n            return {\r\n                done: !this.state.done\r\n            }\r\n        })\r\n    }\r\n    \r\n    onButtonImportantClick = () => {\r\n        this.setState((state) => {\r\n            return {\r\n                important: !this.state.important\r\n            }\r\n        })\r\n    }*/\r\n}\r\n\r\nexport default TodoListItem \r\n  \r\n","import React from 'react'\r\nimport TodoListItem from '../TodoListItem/TodoListItem'\r\nimport './TodoList.css'\r\n\r\nconst TodoList = ({todoData, onDeleted, onImportant, onDone}) => {\r\n    \r\n    const arrItems = todoData.map(item => {\r\n        return (\r\n            <li key={item.id} className='list-group-item'>\r\n                <TodoListItem {...item} \r\n                              onDeleted={() => onDeleted(item.id)}\r\n                              onImportant={() => onImportant(item.id)}\r\n                              onDone={() => onDone(item.id)}\r\n                />\r\n            </li>\r\n        )\r\n    })\r\n    \r\n    return (\r\n        <ul className='list-group todo-list'>\r\n            {arrItems}\r\n        </ul>\r\n    )\r\n}\r\n\r\nexport default TodoList","import React from 'react'\r\nimport './AppHeader.css'\r\n\r\n\r\nconst AppHeader = (props) => (\r\n            <div className=\"app-header d-flex\">\r\n                <h1>Todo List</h1>\r\n                <h2>{props.toDo} have to do, {props.done} done</h2>\r\n            </div>\r\n        )\r\n\r\nexport default AppHeader","import React, {Component} from 'react'\r\nimport './ItemFilter.css'\r\n\r\nexport default class ItemFilter extends Component {\r\n   \r\n    buttons = [\r\n        {name: 'all', label: 'All'},\r\n        {name: 'active', label: 'Active'},\r\n        {name: 'done', label: 'Done'}\r\n    ]\r\n    \r\n    render() {\r\n\r\n        const buttons = this.buttons.map(item => {\r\n            const isActive = this.props.filter === item.name;\r\n            const clazz = isActive? 'btn btn-info' : 'btn btn-outline-secondary'\r\n            return (\r\n                <button type='button' key={item.name} className={clazz} onClick = {() => {this.props.onFilterChange(item.name)}}>{item.label}</button>\r\n            )\r\n        })\r\n      \r\n        return (\r\n            <div className='btn-group'>\r\n                {buttons}\r\n            </div>\r\n        )   \r\n    }\r\n}\r\n","import React, {Component} from 'react'\r\nimport './FormAddItem.css'\r\n\r\nexport default class FormAddItem extends Component {\r\n\r\n    state = {\r\n        label: ''\r\n    }\r\n\r\n    changeText =(e) => {\r\n        this.setState({\r\n            label: e.target.value\r\n        })\r\n    }\r\n\r\n    onSubmit = (e) => {\r\n        e.preventDefault();\r\n        this.props.onAdd(this.state.label);\r\n        this.setState({\r\n            label: ''\r\n        })\r\n    }\r\n     \r\n    render() {\r\n        return (\r\n            <form className='FormAddItem d-flex' onSubmit={this.onSubmit}>\r\n                <input type='text' className='form-control' onChange={this.changeText} value = {this.state.label} placeholder='What needs to be done'></input>\r\n                <button type='submit' className='btn btn-outline-secondary btn-sm'>Add item</button>\r\n            </form>\r\n        )\r\n    }\r\n}","import React, {Component} from 'react'\r\nimport SearchPanel from '../SearchPanel/SearchPanel'\r\nimport TodoList from '../TodoList/TodoList'\r\nimport AppHeader from '../AppHeader/AppHeader'\r\nimport ItemFilter from '../ItemFilter/ItemFilter'\r\nimport FormAddItem from '../FormAddItem/FormAddItem'\r\nimport './App.css'\r\n\r\nexport default class App extends Component {\r\n    max = 100\r\n    state = {\r\n        todoData: [\r\n            { label: 'Drink koffe', important: false, done: false, id:1},\r\n            { label: 'Learn React', important: false, done: false,  id:2},\r\n            { label: 'Have brake', important: false, done: false, id:3}\r\n        ],\r\n        textSearch: '',\r\n        filter: 'all'\r\n    }\r\n\r\n    /*************** */\r\n    onDeleted = (id) => {\r\n        this.setState(({todoData}) => {\r\n            \r\n            const todoDataFilter = todoData.filter(item => item.id !== id);\r\n        \r\n            return {\r\n                todoData: todoDataFilter\r\n            }\r\n        })\r\n    }\r\n\r\n    onAdd = (text) => {\r\n\r\n        const newToDo = {\r\n            label: text, important: false, id: this.max++\r\n        }\r\n        this.setState(({todoData}) => {\r\n            const copyTodoDate = [...todoData, newToDo]\r\n            return {\r\n                todoData: copyTodoDate\r\n            }\r\n        })\r\n    }\r\n\r\n    /*************** */\r\n    onImportant = (id) => {\r\n        this.setState(({todoData}) => {\r\n            return {\r\n                todoData: this.toogleProperty(todoData, id, 'important')\r\n            }\r\n        })\r\n        \r\n    }\r\n\r\n    onDone = (id) => {\r\n\r\n        this.setState(({todoData}) => {\r\n            return {\r\n                todoData: this.toogleProperty(todoData, id, 'done')\r\n            }\r\n        })\r\n    }\r\n    \r\n    toogleProperty(arr, id, propName) {\r\n        const idx = arr.findIndex(item => item.id === id);\r\n        const oldData = arr[idx];\r\n        const newData = {...oldData, [propName]: !oldData[propName]}\r\n        \r\n        return [\r\n            ...arr.slice(0, idx), \r\n            newData, \r\n            ...arr.slice(idx + 1)\r\n        ]\r\n    }\r\n\r\n    /****************/\r\n    setTextSearch = (term) => {\r\n        \r\n        this.setState({\r\n            textSearch: term\r\n        })   \r\n    }\r\n\r\n    search = (items, textSearch) => {\r\n        \r\n        if(textSearch.length-1 === 0) return items\r\n        return items.filter(item => {\r\n            return item.label.toLowerCase().indexOf(textSearch.toLowerCase()) > -1\r\n        })\r\n    }\r\n\r\n    /****************/\r\n    filter = (items, filter) => {\r\n        \r\n        switch(filter) {\r\n            case 'all':\r\n                return items;\r\n            case 'active':\r\n                return items.filter(item => !item.done );\r\n            case 'done':\r\n                return items.filter(item => item.done );\r\n            default:\r\n                return items;\r\n        }\r\n    }\r\n\r\n    onFilterChange = (filter) => {\r\n        console.log(filter);\r\n          \r\n        this.setState({filter});\r\n        \r\n    }\r\n\r\n    /****************/\r\n    render() {\r\n\r\n        const countDone = this.state.todoData.filter(item => item.done === true).length\r\n        const needForWork = this.state.todoData.length - countDone\r\n        let visibleText = this.filter(this.search(this.state.todoData, this.state.textSearch),this.state.filter)\r\n       \r\n        return (\r\n            <div className='Todo-app' >\r\n                <AppHeader toDo={needForWork} done={countDone} ></AppHeader>\r\n                <div className='top-panel d-flex'>\r\n                    <SearchPanel setTextSearch = {this.setTextSearch}></SearchPanel>\r\n                    <ItemFilter filter={this.state.filter} onFilterChange = {this.onFilterChange}></ItemFilter>\r\n                </div>\r\n                <TodoList todoData={visibleText} onDeleted={this.onDeleted} onImportant={this.onImportant} onDone={this.onDone}></TodoList>\r\n                <FormAddItem onAdd={this.onAdd}/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\n\nimport App from './components/App/App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n\n"],"sourceRoot":""}